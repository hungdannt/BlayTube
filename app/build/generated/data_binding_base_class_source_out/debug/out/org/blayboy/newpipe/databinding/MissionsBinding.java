// Generated by view binder compiler. Do not edit!
package org.blayboy.newpipe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.blayboy.newpipe.R;

public final class MissionsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ListEmptyViewBinding listEmptyView;

  @NonNull
  public final RecyclerView missionRecycler;

  private MissionsBinding(@NonNull LinearLayout rootView,
      @NonNull ListEmptyViewBinding listEmptyView, @NonNull RecyclerView missionRecycler) {
    this.rootView = rootView;
    this.listEmptyView = listEmptyView;
    this.missionRecycler = missionRecycler;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MissionsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MissionsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.missions, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MissionsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.list_empty_view;
      View listEmptyView = rootView.findViewById(id);
      if (listEmptyView == null) {
        break missingId;
      }
      ListEmptyViewBinding binding_listEmptyView = ListEmptyViewBinding.bind(listEmptyView);

      id = R.id.mission_recycler;
      RecyclerView missionRecycler = rootView.findViewById(id);
      if (missionRecycler == null) {
        break missingId;
      }

      return new MissionsBinding((LinearLayout) rootView, binding_listEmptyView, missionRecycler);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
