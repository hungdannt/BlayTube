// Generated by view binder compiler. Do not edit!
package org.blayboy.newpipe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.blayboy.newpipe.R;

public final class ItemSearchSuggestionBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView itemSuggestionIcon;

  @NonNull
  public final TextView itemSuggestionQuery;

  @NonNull
  public final LinearLayout suggestionInsert;

  @NonNull
  public final LinearLayout suggestionSearch;

  private ItemSearchSuggestionBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView itemSuggestionIcon, @NonNull TextView itemSuggestionQuery,
      @NonNull LinearLayout suggestionInsert, @NonNull LinearLayout suggestionSearch) {
    this.rootView = rootView;
    this.itemSuggestionIcon = itemSuggestionIcon;
    this.itemSuggestionQuery = itemSuggestionQuery;
    this.suggestionInsert = suggestionInsert;
    this.suggestionSearch = suggestionSearch;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemSearchSuggestionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemSearchSuggestionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_search_suggestion, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemSearchSuggestionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.item_suggestion_icon;
      ImageView itemSuggestionIcon = rootView.findViewById(id);
      if (itemSuggestionIcon == null) {
        break missingId;
      }

      id = R.id.item_suggestion_query;
      TextView itemSuggestionQuery = rootView.findViewById(id);
      if (itemSuggestionQuery == null) {
        break missingId;
      }

      id = R.id.suggestion_insert;
      LinearLayout suggestionInsert = rootView.findViewById(id);
      if (suggestionInsert == null) {
        break missingId;
      }

      id = R.id.suggestion_search;
      LinearLayout suggestionSearch = rootView.findViewById(id);
      if (suggestionSearch == null) {
        break missingId;
      }

      return new ItemSearchSuggestionBinding((RelativeLayout) rootView, itemSuggestionIcon,
          itemSuggestionQuery, suggestionInsert, suggestionSearch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
