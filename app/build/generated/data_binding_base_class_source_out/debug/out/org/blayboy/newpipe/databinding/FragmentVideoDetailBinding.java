// Generated by view binder compiler. Do not edit!
package org.blayboy.newpipe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewpager.widget.ViewPager;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.tabs.TabLayout;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.blayboy.newpipe.R;
import org.blayboy.newpipe.views.AnimatedProgressBar;

public final class FragmentVideoDetailBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final LinearLayout detailContentRootHiding;

  @NonNull
  public final RelativeLayout detailContentRootLayout;

  @NonNull
  public final LinearLayout detailControlPanel;

  @NonNull
  public final TextView detailControlsBackground;

  @NonNull
  public final TextView detailControlsDownload;

  @NonNull
  public final TextView detailControlsOpenInBrowser;

  @NonNull
  public final TextView detailControlsPlayWithKodi;

  @NonNull
  public final TextView detailControlsPlaylistAppend;

  @NonNull
  public final TextView detailControlsPopup;

  @NonNull
  public final TextView detailControlsShare;

  @NonNull
  public final TextView detailDurationView;

  @NonNull
  public final View detailMainContent;

  @NonNull
  public final View detailMetaInfoSeparator;

  @NonNull
  public final TextView detailMetaInfoTextView;

  @NonNull
  public final TextView detailPositionView;

  @NonNull
  public final RelativeLayout detailRoot;

  @NonNull
  public final LinearLayout detailSecondaryControlPanel;

  @NonNull
  public final TextView detailSubChannelTextView;

  @NonNull
  public final CircleImageView detailSubChannelThumbnailView;

  @NonNull
  public final ImageView detailThumbnailImageView;

  @NonNull
  public final ImageView detailThumbnailPlayButton;

  @NonNull
  public final FrameLayout detailThumbnailRootLayout;

  @NonNull
  public final TextView detailThumbsDisabledView;

  @NonNull
  public final TextView detailThumbsDownCountView;

  @NonNull
  public final ImageView detailThumbsDownImgView;

  @NonNull
  public final TextView detailThumbsUpCountView;

  @NonNull
  public final ImageView detailThumbsUpImgView;

  @NonNull
  public final FrameLayout detailTitleRootLayout;

  @NonNull
  public final ImageView detailToggleSecondaryControlsView;

  @NonNull
  public final LinearLayout detailUploaderRootLayout;

  @NonNull
  public final TextView detailUploaderTextView;

  @NonNull
  public final CircleImageView detailUploaderThumbnailView;

  @NonNull
  public final TextView detailVideoTitleView;

  @NonNull
  public final TextView detailViewCountView;

  @NonNull
  public final RelativeLayout detailsPanel;

  @NonNull
  public final ErrorPanelBinding errorPanel;

  @NonNull
  public final ProgressBar loadingProgressBar;

  @NonNull
  public final LinearLayout overlayButtonsLayout;

  @NonNull
  public final TextView overlayChannelTextView;

  @NonNull
  public final ImageButton overlayCloseButton;

  @NonNull
  public final RelativeLayout overlayLayout;

  @NonNull
  public final LinearLayout overlayMetadataLayout;

  @NonNull
  public final ImageButton overlayPlayPauseButton;

  @NonNull
  public final ImageButton overlayThumbnail;

  @NonNull
  public final TextView overlayTitleTextView;

  @NonNull
  public final FrameLayout playerPlaceholder;

  @NonNull
  public final AnimatedProgressBar positionView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-large-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final FragmentContainerView relatedItemsLayout;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final TextView touchAppendDetail;

  @NonNull
  public final FrameLayout videoItemDetail;

  @NonNull
  public final ViewPager viewPager;

  private FragmentVideoDetailBinding(@NonNull FrameLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull LinearLayout detailContentRootHiding,
      @NonNull RelativeLayout detailContentRootLayout, @NonNull LinearLayout detailControlPanel,
      @NonNull TextView detailControlsBackground, @NonNull TextView detailControlsDownload,
      @NonNull TextView detailControlsOpenInBrowser, @NonNull TextView detailControlsPlayWithKodi,
      @NonNull TextView detailControlsPlaylistAppend, @NonNull TextView detailControlsPopup,
      @NonNull TextView detailControlsShare, @NonNull TextView detailDurationView,
      @NonNull View detailMainContent, @NonNull View detailMetaInfoSeparator,
      @NonNull TextView detailMetaInfoTextView, @NonNull TextView detailPositionView,
      @NonNull RelativeLayout detailRoot, @NonNull LinearLayout detailSecondaryControlPanel,
      @NonNull TextView detailSubChannelTextView,
      @NonNull CircleImageView detailSubChannelThumbnailView,
      @NonNull ImageView detailThumbnailImageView, @NonNull ImageView detailThumbnailPlayButton,
      @NonNull FrameLayout detailThumbnailRootLayout, @NonNull TextView detailThumbsDisabledView,
      @NonNull TextView detailThumbsDownCountView, @NonNull ImageView detailThumbsDownImgView,
      @NonNull TextView detailThumbsUpCountView, @NonNull ImageView detailThumbsUpImgView,
      @NonNull FrameLayout detailTitleRootLayout,
      @NonNull ImageView detailToggleSecondaryControlsView,
      @NonNull LinearLayout detailUploaderRootLayout, @NonNull TextView detailUploaderTextView,
      @NonNull CircleImageView detailUploaderThumbnailView, @NonNull TextView detailVideoTitleView,
      @NonNull TextView detailViewCountView, @NonNull RelativeLayout detailsPanel,
      @NonNull ErrorPanelBinding errorPanel, @NonNull ProgressBar loadingProgressBar,
      @NonNull LinearLayout overlayButtonsLayout, @NonNull TextView overlayChannelTextView,
      @NonNull ImageButton overlayCloseButton, @NonNull RelativeLayout overlayLayout,
      @NonNull LinearLayout overlayMetadataLayout, @NonNull ImageButton overlayPlayPauseButton,
      @NonNull ImageButton overlayThumbnail, @NonNull TextView overlayTitleTextView,
      @NonNull FrameLayout playerPlaceholder, @NonNull AnimatedProgressBar positionView,
      @Nullable FragmentContainerView relatedItemsLayout, @NonNull TabLayout tabLayout,
      @NonNull TextView touchAppendDetail, @NonNull FrameLayout videoItemDetail,
      @NonNull ViewPager viewPager) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.detailContentRootHiding = detailContentRootHiding;
    this.detailContentRootLayout = detailContentRootLayout;
    this.detailControlPanel = detailControlPanel;
    this.detailControlsBackground = detailControlsBackground;
    this.detailControlsDownload = detailControlsDownload;
    this.detailControlsOpenInBrowser = detailControlsOpenInBrowser;
    this.detailControlsPlayWithKodi = detailControlsPlayWithKodi;
    this.detailControlsPlaylistAppend = detailControlsPlaylistAppend;
    this.detailControlsPopup = detailControlsPopup;
    this.detailControlsShare = detailControlsShare;
    this.detailDurationView = detailDurationView;
    this.detailMainContent = detailMainContent;
    this.detailMetaInfoSeparator = detailMetaInfoSeparator;
    this.detailMetaInfoTextView = detailMetaInfoTextView;
    this.detailPositionView = detailPositionView;
    this.detailRoot = detailRoot;
    this.detailSecondaryControlPanel = detailSecondaryControlPanel;
    this.detailSubChannelTextView = detailSubChannelTextView;
    this.detailSubChannelThumbnailView = detailSubChannelThumbnailView;
    this.detailThumbnailImageView = detailThumbnailImageView;
    this.detailThumbnailPlayButton = detailThumbnailPlayButton;
    this.detailThumbnailRootLayout = detailThumbnailRootLayout;
    this.detailThumbsDisabledView = detailThumbsDisabledView;
    this.detailThumbsDownCountView = detailThumbsDownCountView;
    this.detailThumbsDownImgView = detailThumbsDownImgView;
    this.detailThumbsUpCountView = detailThumbsUpCountView;
    this.detailThumbsUpImgView = detailThumbsUpImgView;
    this.detailTitleRootLayout = detailTitleRootLayout;
    this.detailToggleSecondaryControlsView = detailToggleSecondaryControlsView;
    this.detailUploaderRootLayout = detailUploaderRootLayout;
    this.detailUploaderTextView = detailUploaderTextView;
    this.detailUploaderThumbnailView = detailUploaderThumbnailView;
    this.detailVideoTitleView = detailVideoTitleView;
    this.detailViewCountView = detailViewCountView;
    this.detailsPanel = detailsPanel;
    this.errorPanel = errorPanel;
    this.loadingProgressBar = loadingProgressBar;
    this.overlayButtonsLayout = overlayButtonsLayout;
    this.overlayChannelTextView = overlayChannelTextView;
    this.overlayCloseButton = overlayCloseButton;
    this.overlayLayout = overlayLayout;
    this.overlayMetadataLayout = overlayMetadataLayout;
    this.overlayPlayPauseButton = overlayPlayPauseButton;
    this.overlayThumbnail = overlayThumbnail;
    this.overlayTitleTextView = overlayTitleTextView;
    this.playerPlaceholder = playerPlaceholder;
    this.positionView = positionView;
    this.relatedItemsLayout = relatedItemsLayout;
    this.tabLayout = tabLayout;
    this.touchAppendDetail = touchAppendDetail;
    this.videoItemDetail = videoItemDetail;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentVideoDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentVideoDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_video_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentVideoDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar_layout;
      AppBarLayout appBarLayout = rootView.findViewById(id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.detail_content_root_hiding;
      LinearLayout detailContentRootHiding = rootView.findViewById(id);
      if (detailContentRootHiding == null) {
        break missingId;
      }

      id = R.id.detail_content_root_layout;
      RelativeLayout detailContentRootLayout = rootView.findViewById(id);
      if (detailContentRootLayout == null) {
        break missingId;
      }

      id = R.id.detail_control_panel;
      LinearLayout detailControlPanel = rootView.findViewById(id);
      if (detailControlPanel == null) {
        break missingId;
      }

      id = R.id.detail_controls_background;
      TextView detailControlsBackground = rootView.findViewById(id);
      if (detailControlsBackground == null) {
        break missingId;
      }

      id = R.id.detail_controls_download;
      TextView detailControlsDownload = rootView.findViewById(id);
      if (detailControlsDownload == null) {
        break missingId;
      }

      id = R.id.detail_controls_open_in_browser;
      TextView detailControlsOpenInBrowser = rootView.findViewById(id);
      if (detailControlsOpenInBrowser == null) {
        break missingId;
      }

      id = R.id.detail_controls_play_with_kodi;
      TextView detailControlsPlayWithKodi = rootView.findViewById(id);
      if (detailControlsPlayWithKodi == null) {
        break missingId;
      }

      id = R.id.detail_controls_playlist_append;
      TextView detailControlsPlaylistAppend = rootView.findViewById(id);
      if (detailControlsPlaylistAppend == null) {
        break missingId;
      }

      id = R.id.detail_controls_popup;
      TextView detailControlsPopup = rootView.findViewById(id);
      if (detailControlsPopup == null) {
        break missingId;
      }

      id = R.id.detail_controls_share;
      TextView detailControlsShare = rootView.findViewById(id);
      if (detailControlsShare == null) {
        break missingId;
      }

      id = R.id.detail_duration_view;
      TextView detailDurationView = rootView.findViewById(id);
      if (detailDurationView == null) {
        break missingId;
      }

      id = R.id.detail_main_content;
      View detailMainContent = rootView.findViewById(id);
      if (detailMainContent == null) {
        break missingId;
      }

      id = R.id.detail_meta_info_separator;
      View detailMetaInfoSeparator = rootView.findViewById(id);
      if (detailMetaInfoSeparator == null) {
        break missingId;
      }

      id = R.id.detail_meta_info_text_view;
      TextView detailMetaInfoTextView = rootView.findViewById(id);
      if (detailMetaInfoTextView == null) {
        break missingId;
      }

      id = R.id.detail_position_view;
      TextView detailPositionView = rootView.findViewById(id);
      if (detailPositionView == null) {
        break missingId;
      }

      id = R.id.detail_root;
      RelativeLayout detailRoot = rootView.findViewById(id);
      if (detailRoot == null) {
        break missingId;
      }

      id = R.id.detail_secondary_control_panel;
      LinearLayout detailSecondaryControlPanel = rootView.findViewById(id);
      if (detailSecondaryControlPanel == null) {
        break missingId;
      }

      id = R.id.detail_sub_channel_text_view;
      TextView detailSubChannelTextView = rootView.findViewById(id);
      if (detailSubChannelTextView == null) {
        break missingId;
      }

      id = R.id.detail_sub_channel_thumbnail_view;
      CircleImageView detailSubChannelThumbnailView = rootView.findViewById(id);
      if (detailSubChannelThumbnailView == null) {
        break missingId;
      }

      id = R.id.detail_thumbnail_image_view;
      ImageView detailThumbnailImageView = rootView.findViewById(id);
      if (detailThumbnailImageView == null) {
        break missingId;
      }

      id = R.id.detail_thumbnail_play_button;
      ImageView detailThumbnailPlayButton = rootView.findViewById(id);
      if (detailThumbnailPlayButton == null) {
        break missingId;
      }

      id = R.id.detail_thumbnail_root_layout;
      FrameLayout detailThumbnailRootLayout = rootView.findViewById(id);
      if (detailThumbnailRootLayout == null) {
        break missingId;
      }

      id = R.id.detail_thumbs_disabled_view;
      TextView detailThumbsDisabledView = rootView.findViewById(id);
      if (detailThumbsDisabledView == null) {
        break missingId;
      }

      id = R.id.detail_thumbs_down_count_view;
      TextView detailThumbsDownCountView = rootView.findViewById(id);
      if (detailThumbsDownCountView == null) {
        break missingId;
      }

      id = R.id.detail_thumbs_down_img_view;
      ImageView detailThumbsDownImgView = rootView.findViewById(id);
      if (detailThumbsDownImgView == null) {
        break missingId;
      }

      id = R.id.detail_thumbs_up_count_view;
      TextView detailThumbsUpCountView = rootView.findViewById(id);
      if (detailThumbsUpCountView == null) {
        break missingId;
      }

      id = R.id.detail_thumbs_up_img_view;
      ImageView detailThumbsUpImgView = rootView.findViewById(id);
      if (detailThumbsUpImgView == null) {
        break missingId;
      }

      id = R.id.detail_title_root_layout;
      FrameLayout detailTitleRootLayout = rootView.findViewById(id);
      if (detailTitleRootLayout == null) {
        break missingId;
      }

      id = R.id.detail_toggle_secondary_controls_view;
      ImageView detailToggleSecondaryControlsView = rootView.findViewById(id);
      if (detailToggleSecondaryControlsView == null) {
        break missingId;
      }

      id = R.id.detail_uploader_root_layout;
      LinearLayout detailUploaderRootLayout = rootView.findViewById(id);
      if (detailUploaderRootLayout == null) {
        break missingId;
      }

      id = R.id.detail_uploader_text_view;
      TextView detailUploaderTextView = rootView.findViewById(id);
      if (detailUploaderTextView == null) {
        break missingId;
      }

      id = R.id.detail_uploader_thumbnail_view;
      CircleImageView detailUploaderThumbnailView = rootView.findViewById(id);
      if (detailUploaderThumbnailView == null) {
        break missingId;
      }

      id = R.id.detail_video_title_view;
      TextView detailVideoTitleView = rootView.findViewById(id);
      if (detailVideoTitleView == null) {
        break missingId;
      }

      id = R.id.detail_view_count_view;
      TextView detailViewCountView = rootView.findViewById(id);
      if (detailViewCountView == null) {
        break missingId;
      }

      id = R.id.details_panel;
      RelativeLayout detailsPanel = rootView.findViewById(id);
      if (detailsPanel == null) {
        break missingId;
      }

      id = R.id.error_panel;
      View errorPanel = rootView.findViewById(id);
      if (errorPanel == null) {
        break missingId;
      }
      ErrorPanelBinding binding_errorPanel = ErrorPanelBinding.bind(errorPanel);

      id = R.id.loading_progress_bar;
      ProgressBar loadingProgressBar = rootView.findViewById(id);
      if (loadingProgressBar == null) {
        break missingId;
      }

      id = R.id.overlay_buttons_layout;
      LinearLayout overlayButtonsLayout = rootView.findViewById(id);
      if (overlayButtonsLayout == null) {
        break missingId;
      }

      id = R.id.overlay_channel_text_view;
      TextView overlayChannelTextView = rootView.findViewById(id);
      if (overlayChannelTextView == null) {
        break missingId;
      }

      id = R.id.overlay_close_button;
      ImageButton overlayCloseButton = rootView.findViewById(id);
      if (overlayCloseButton == null) {
        break missingId;
      }

      id = R.id.overlay_layout;
      RelativeLayout overlayLayout = rootView.findViewById(id);
      if (overlayLayout == null) {
        break missingId;
      }

      id = R.id.overlay_metadata_layout;
      LinearLayout overlayMetadataLayout = rootView.findViewById(id);
      if (overlayMetadataLayout == null) {
        break missingId;
      }

      id = R.id.overlay_play_pause_button;
      ImageButton overlayPlayPauseButton = rootView.findViewById(id);
      if (overlayPlayPauseButton == null) {
        break missingId;
      }

      id = R.id.overlay_thumbnail;
      ImageButton overlayThumbnail = rootView.findViewById(id);
      if (overlayThumbnail == null) {
        break missingId;
      }

      id = R.id.overlay_title_text_view;
      TextView overlayTitleTextView = rootView.findViewById(id);
      if (overlayTitleTextView == null) {
        break missingId;
      }

      id = R.id.player_placeholder;
      FrameLayout playerPlaceholder = rootView.findViewById(id);
      if (playerPlaceholder == null) {
        break missingId;
      }

      id = R.id.position_view;
      AnimatedProgressBar positionView = rootView.findViewById(id);
      if (positionView == null) {
        break missingId;
      }

      id = R.id.relatedItemsLayout;
      FragmentContainerView relatedItemsLayout = rootView.findViewById(id);

      id = R.id.tab_layout;
      TabLayout tabLayout = rootView.findViewById(id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.touch_append_detail;
      TextView touchAppendDetail = rootView.findViewById(id);
      if (touchAppendDetail == null) {
        break missingId;
      }

      FrameLayout videoItemDetail = (FrameLayout) rootView;

      id = R.id.view_pager;
      ViewPager viewPager = rootView.findViewById(id);
      if (viewPager == null) {
        break missingId;
      }

      return new FragmentVideoDetailBinding((FrameLayout) rootView, appBarLayout,
          detailContentRootHiding, detailContentRootLayout, detailControlPanel,
          detailControlsBackground, detailControlsDownload, detailControlsOpenInBrowser,
          detailControlsPlayWithKodi, detailControlsPlaylistAppend, detailControlsPopup,
          detailControlsShare, detailDurationView, detailMainContent, detailMetaInfoSeparator,
          detailMetaInfoTextView, detailPositionView, detailRoot, detailSecondaryControlPanel,
          detailSubChannelTextView, detailSubChannelThumbnailView, detailThumbnailImageView,
          detailThumbnailPlayButton, detailThumbnailRootLayout, detailThumbsDisabledView,
          detailThumbsDownCountView, detailThumbsDownImgView, detailThumbsUpCountView,
          detailThumbsUpImgView, detailTitleRootLayout, detailToggleSecondaryControlsView,
          detailUploaderRootLayout, detailUploaderTextView, detailUploaderThumbnailView,
          detailVideoTitleView, detailViewCountView, detailsPanel, binding_errorPanel,
          loadingProgressBar, overlayButtonsLayout, overlayChannelTextView, overlayCloseButton,
          overlayLayout, overlayMetadataLayout, overlayPlayPauseButton, overlayThumbnail,
          overlayTitleTextView, playerPlaceholder, positionView, relatedItemsLayout, tabLayout,
          touchAppendDetail, videoItemDetail, viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
