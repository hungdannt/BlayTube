// Generated by view binder compiler. Do not edit!
package org.blayboy.newpipe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.blayboy.newpipe.R;
import org.blayboy.newpipe.views.FocusAwareDrawerLayout;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final FocusAwareDrawerLayout rootView;

  @NonNull
  public final DrawerLayoutBinding drawerLayout;

  @NonNull
  public final FragmentContainerView fragmentHolder;

  @NonNull
  public final FragmentContainerView fragmentPlayerHolder;

  @NonNull
  public final ToolbarLayoutBinding toolbarLayout;

  private ActivityMainBinding(@NonNull FocusAwareDrawerLayout rootView,
      @NonNull DrawerLayoutBinding drawerLayout, @NonNull FragmentContainerView fragmentHolder,
      @NonNull FragmentContainerView fragmentPlayerHolder,
      @NonNull ToolbarLayoutBinding toolbarLayout) {
    this.rootView = rootView;
    this.drawerLayout = drawerLayout;
    this.fragmentHolder = fragmentHolder;
    this.fragmentPlayerHolder = fragmentPlayerHolder;
    this.toolbarLayout = toolbarLayout;
  }

  @Override
  @NonNull
  public FocusAwareDrawerLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.drawer_layout;
      View drawerLayout = rootView.findViewById(id);
      if (drawerLayout == null) {
        break missingId;
      }
      DrawerLayoutBinding binding_drawerLayout = DrawerLayoutBinding.bind(drawerLayout);

      id = R.id.fragment_holder;
      FragmentContainerView fragmentHolder = rootView.findViewById(id);
      if (fragmentHolder == null) {
        break missingId;
      }

      id = R.id.fragment_player_holder;
      FragmentContainerView fragmentPlayerHolder = rootView.findViewById(id);
      if (fragmentPlayerHolder == null) {
        break missingId;
      }

      id = R.id.toolbar_layout;
      View toolbarLayout = rootView.findViewById(id);
      if (toolbarLayout == null) {
        break missingId;
      }
      ToolbarLayoutBinding binding_toolbarLayout = ToolbarLayoutBinding.bind(toolbarLayout);

      return new ActivityMainBinding((FocusAwareDrawerLayout) rootView, binding_drawerLayout,
          fragmentHolder, fragmentPlayerHolder, binding_toolbarLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
