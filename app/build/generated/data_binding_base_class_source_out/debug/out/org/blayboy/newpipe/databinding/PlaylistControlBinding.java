// Generated by view binder compiler. Do not edit!
package org.blayboy.newpipe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.blayboy.newpipe.R;

public final class PlaylistControlBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final View anchorLeft;

  @NonNull
  public final View anchorRight;

  @NonNull
  public final LinearLayout playlistControl;

  @NonNull
  public final LinearLayout playlistCtrlPlayAllButton;

  @NonNull
  public final LinearLayout playlistCtrlPlayBgButton;

  @NonNull
  public final LinearLayout playlistCtrlPlayPopupButton;

  private PlaylistControlBinding(@NonNull LinearLayout rootView, @NonNull View anchorLeft,
      @NonNull View anchorRight, @NonNull LinearLayout playlistControl,
      @NonNull LinearLayout playlistCtrlPlayAllButton,
      @NonNull LinearLayout playlistCtrlPlayBgButton,
      @NonNull LinearLayout playlistCtrlPlayPopupButton) {
    this.rootView = rootView;
    this.anchorLeft = anchorLeft;
    this.anchorRight = anchorRight;
    this.playlistControl = playlistControl;
    this.playlistCtrlPlayAllButton = playlistCtrlPlayAllButton;
    this.playlistCtrlPlayBgButton = playlistCtrlPlayBgButton;
    this.playlistCtrlPlayPopupButton = playlistCtrlPlayPopupButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PlaylistControlBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PlaylistControlBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.playlist_control, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PlaylistControlBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.anchorLeft;
      View anchorLeft = rootView.findViewById(id);
      if (anchorLeft == null) {
        break missingId;
      }

      id = R.id.anchorRight;
      View anchorRight = rootView.findViewById(id);
      if (anchorRight == null) {
        break missingId;
      }

      LinearLayout playlistControl = (LinearLayout) rootView;

      id = R.id.playlist_ctrl_play_all_button;
      LinearLayout playlistCtrlPlayAllButton = rootView.findViewById(id);
      if (playlistCtrlPlayAllButton == null) {
        break missingId;
      }

      id = R.id.playlist_ctrl_play_bg_button;
      LinearLayout playlistCtrlPlayBgButton = rootView.findViewById(id);
      if (playlistCtrlPlayBgButton == null) {
        break missingId;
      }

      id = R.id.playlist_ctrl_play_popup_button;
      LinearLayout playlistCtrlPlayPopupButton = rootView.findViewById(id);
      if (playlistCtrlPlayPopupButton == null) {
        break missingId;
      }

      return new PlaylistControlBinding((LinearLayout) rootView, anchorLeft, anchorRight,
          playlistControl, playlistCtrlPlayAllButton, playlistCtrlPlayBgButton,
          playlistCtrlPlayPopupButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
