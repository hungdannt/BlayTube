// Generated by view binder compiler. Do not edit!
package org.blayboy.newpipe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.blayboy.newpipe.R;

public final class DialogPlaylistsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout newPlaylist;

  @NonNull
  public final ImageView newPlaylistIcon;

  @NonNull
  public final TextView newPlaylistText;

  @NonNull
  public final RecyclerView playlistList;

  @NonNull
  public final View separator;

  private DialogPlaylistsBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout newPlaylist, @NonNull ImageView newPlaylistIcon,
      @NonNull TextView newPlaylistText, @NonNull RecyclerView playlistList,
      @NonNull View separator) {
    this.rootView = rootView;
    this.newPlaylist = newPlaylist;
    this.newPlaylistIcon = newPlaylistIcon;
    this.newPlaylistText = newPlaylistText;
    this.playlistList = playlistList;
    this.separator = separator;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogPlaylistsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogPlaylistsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_playlists, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogPlaylistsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.newPlaylist;
      RelativeLayout newPlaylist = rootView.findViewById(id);
      if (newPlaylist == null) {
        break missingId;
      }

      id = R.id.newPlaylistIcon;
      ImageView newPlaylistIcon = rootView.findViewById(id);
      if (newPlaylistIcon == null) {
        break missingId;
      }

      id = R.id.newPlaylistText;
      TextView newPlaylistText = rootView.findViewById(id);
      if (newPlaylistText == null) {
        break missingId;
      }

      id = R.id.playlist_list;
      RecyclerView playlistList = rootView.findViewById(id);
      if (playlistList == null) {
        break missingId;
      }

      id = R.id.separator;
      View separator = rootView.findViewById(id);
      if (separator == null) {
        break missingId;
      }

      return new DialogPlaylistsBinding((RelativeLayout) rootView, newPlaylist, newPlaylistIcon,
          newPlaylistText, playlistList, separator);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
